// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/api"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/api/handler"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/api/middleware"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/config"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/db"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/otp"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/repository"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/token"
	"github.com/nikhilnarayanan623/ecommerce-gin-clean-arch/pkg/usecase"
)

// Injectors from wire.go:

func InitializeApi(cfg config.Config) (*http.ServerHTTP, error) {
	gormDB, err := db.ConnectDatbase(cfg)
	if err != nil {
		return nil, err
	}
	authRepository := repository.NewAuthRepository(gormDB)
	tokenAuth := token.NewJWTAuth(cfg)
	userRepository := repository.NewUserRepository(gormDB)
	adminRepository := repository.NewAdminRepository(gormDB)
	otpVerification := otp.NewTwiloOtp(cfg)
	authUseCase := usecase.NewAuthUseCase(authRepository, tokenAuth, userRepository, adminRepository, otpVerification)
	authHandler := handler.NewAuthHandler(authUseCase)
	middlewareMiddleware := middleware.NewMiddleware(tokenAuth)
	adminUseCase := usecase.NewAdminUseCase(adminRepository)
	adminHandler := handler.NewAdminHandler(adminUseCase)
	cartRepository := repository.NewCartRepository(gormDB)
	userUseCase := usecase.NewUserUseCase(userRepository, cartRepository)
	userHandler := handler.NewUserHandler(userUseCase)
	productRepository := repository.NewProductRepository(gormDB)
	cartUseCase := usecase.NewCartUseCase(cartRepository, productRepository)
	cartHandler := handler.NewCartHandler(cartUseCase)
	productUseCase := usecase.NewProductUseCase(productRepository)
	productHandler := handler.NewProductHandler(productUseCase)
	orderRepository := repository.NewOrderRepository(gormDB)
	couponRepository := repository.NewCouponRepository(gormDB)
	orderUseCase := usecase.NewOrderUseCase(orderRepository, cartRepository, userRepository, couponRepository)
	orderHandler := handler.NewOrderHandler(orderUseCase)
	couponUseCase := usecase.NewCouponUseCase(couponRepository)
	couponHandler := handler.NewCouponHandler(couponUseCase)
	serverHTTP := http.NewServerHTTP(authHandler, middlewareMiddleware, adminHandler, userHandler, cartHandler, productHandler, orderHandler, couponHandler)
	return serverHTTP, nil
}
